{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vinod\\\\Desktop\\\\ReactLearning\\\\meme-app\\\\src\\\\memegenerator.js\";\nimport React, { Component } from \"react\";\n\nclass MemeGenerator extends Component {\n  constructor() {\n    super();\n    this.state = {\n      toptext: \"\",\n      bottomtext: \"\",\n      randomimage: \"http://i.imgflip.com/1bij.jpg\",\n      allmemeimgs: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.imgflip.com/get_memes\").then(response => response.json()).then(response => {\n      const x = response.data.memes;\n      this.setState(prev => {\n        const UpdatedArray = x.map(item => {\n          return item;\n        });\n        return {\n          allmemeimgs: UpdatedArray\n        };\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, \" Hey! \"), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, \" Reached \"), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, \" \", this.state.allmemeimgs, \" here \"), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, \" Done! \"));\n  }\n\n}\n\nexport default MemeGenerator;","map":{"version":3,"sources":["C:/Users/vinod/Desktop/ReactLearning/meme-app/src/memegenerator.js"],"names":["React","Component","MemeGenerator","constructor","state","toptext","bottomtext","randomimage","allmemeimgs","componentDidMount","fetch","then","response","json","x","data","memes","setState","prev","UpdatedArray","map","item","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,MAAMC,aAAN,SAA4BD,SAA5B,CAAqC;AACnCE,EAAAA,WAAW,GAAE;AACX;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAC,EADG;AAEXC,MAAAA,UAAU,EAAC,EAFA;AAGXC,MAAAA,WAAW,EAAC,+BAHD;AAIXC,MAAAA,WAAW,EAAE;AAJF,KAAb;AAMD;;AAEDC,EAAAA,iBAAiB,GAAE;AAEjBC,IAAAA,KAAK,CAAC,mCAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMC,QAAQ,IAAI;AAChB,YAAME,CAAC,GAAGF,QAAQ,CAACG,IAAT,CAAcC,KAAxB;AACA,WAAKC,QAAL,CAAcC,IAAI,IAAI;AACpB,cAAMC,YAAY,GAAGL,CAAC,CAACM,GAAF,CAAMC,IAAI,IAAI;AACjC,iBAAOA,IAAP;AACD,SAFoB,CAArB;AAGA,eAAO;AACLb,UAAAA,WAAW,EAAEW;AADR,SAAP;AAGH,OAPC;AAQH,KAZC;AAYC;;AAEHG,EAAAA,MAAM,GAAE;AACN,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAM,KAAKlB,KAAL,CAAWI,WAAjB,WAHA,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJA,CADF;AAQD;;AApCkC;;AAsCrC,eAAeN,aAAf","sourcesContent":["import React, {Component} from \"react\"\r\n\r\nclass MemeGenerator extends Component{\r\n  constructor(){\r\n    super()\r\n    this.state = {\r\n      toptext:\"\",\r\n      bottomtext:\"\",\r\n      randomimage:\"http://i.imgflip.com/1bij.jpg\",\r\n      allmemeimgs: []\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n\r\n    fetch(\"https://api.imgflip.com/get_memes\")\r\n    .then(response => response.json())\r\n    .then(response => {\r\n      const x = response.data.memes\r\n      this.setState(prev => {\r\n        const UpdatedArray = x.map(item => {\r\n          return item\r\n        })\r\n        return {\r\n          allmemeimgs: UpdatedArray\r\n        }\r\n    })\r\n  })}\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n      <h1> Hey! </h1>\r\n      <h1> Reached </h1>\r\n      <h1> {this.state.allmemeimgs} here </h1>\r\n      <h1> Done! </h1>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default MemeGenerator;\r\n"]},"metadata":{},"sourceType":"module"}